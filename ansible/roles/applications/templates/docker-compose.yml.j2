version: "3"
services:
  {% if applications_traefik %}
  traefik:
    image: traefik:{{ applications_traefik_image_version }}
    container_name: traefik
    ports:
      - 443:443
      - {{ applications_traefik_external_port_webui }}:8080
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.customresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.customresolver.acme.email={{ applications_traefik_acme_email }}"
      - "--certificatesresolvers.customresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "{{ applications_data_directory }}/letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - public
      - internal
    restart: always
  {% endif %}

  {% if applications_node_app %}
  sze-linux-node-app:
    image: ghcr.io/szkly/sze-linux-node-app:{{ applications_node_app_image_version }}
    container_name: sze-linux-node-app
    ports:
      - {{ applications_node_app_external_port }}:3000
    user: 1000:1000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`{{ applications_node_app_subdomain }}.{{ applications_domain }}`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=customresolver"
    networks:
      - public
    restart: unless-stopped
  {% endif %}

  {% if applications_monitoring_stack %}
  grafana:
    image: grafana/grafana:{{ applications_grafana_image_version }}
    container_name: grafana-server
    ports:
      - {{ applications_grafana_external_port }}:3000
    user: 1000:1000
    environment:
      - GF_SECURITY_ADMIN_USER={{ applications_grafana_admin_user }}
      - GF_SECURITY_ADMIN_PASSWORD={{ applications_grafana_admin_password }}
      - GF_INSTALL_PLUGINS=
    volumes:
      - {{ applications_data_directory }}/grafana:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`{{ applications_grafana_subdomain }}.{{ applications_domain }}`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=customresolver"
    depends_on:
      - prometheus
    networks:
      - public
    restart: always

  prometheus:
    image: prom/prometheus:{{ applications_prometheus_image_version }}
    ports:
      - {{ applications_prometheus_external_port }}:9090
    volumes:
      - {{ applications_data_directory }}/prometheus/config:/etc/prometheus/
      - {{ applications_data_directory }}/prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - internal
    restart: always

  node-exporter:
    image: quay.io/prometheus/node-exporter:{{ applications_node_exporter_image_version }}
    ports:
      - {{ applications_node_exporter_external_port }}:9100
    command:
      - "--path.rootfs=/host"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    networks:
      - internal
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:{{ applications_cadvisor_image_version }}
    ports:
      - {{ applications_cadvisor_external_port }}:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - internal
    restart: always
  {% endif %}
